{
  "information_for_contributors": [
    "This textmate grammars provide Twig syntax highlighting support.",
    "This document has been heavily inspired by the work of the vscode-liquid repo",
    "found here https://github.com/panoply/vscode-liquid."
  ],
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Twig",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#tags"
    },
    {
      "include": "#output"
    },
    {
      "include": "text.html.derivative"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "entity.name.tag.conditional.twig",
          "match": "\\b(?:else)?(if)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.control.twig",
          "match": "\\b(?:end)?(if)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.import.twig",
          "match": "\\b(import|include)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.iteration.liquid",
          "match": "\\b(?:end)?(for)\\b[\\W\\s]"
        },
        {
          "name": "keyword.other.twig",
          "match": "\\b(apply|endapply|as|autoescape|endautoescape|block|endblock|extends|cache|endcache|flush|from|import|include|macro|endmacro|sandbox|endsandbox|set|endset|use|verbatim|endverbatim|with|endwith)\\b"
        },
        {
          "name": "variable.other.constant.twig",
          "match": "\\b(_self)\\b"
        },
        {
          "name": "entity.name.tag.method.twig",
          "match": "\\s*\\b(as|with)\\b"
        }
      ]
    },
    "comments": {
      "name": "comment.block.twig",
      "begin": "{#",
      "end": "#}"
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.twig",
          "begin": "(')",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.twig"
            }
          },
          "end": "(')",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.twig"
            }
          }
        },
        {
          "name": "string.quoted.double.twig",
          "begin": "(\")",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.twig"
            }
          },
          "end": "(\")",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.twig"
            }
          }
        }
      ]
    },
    "filters": {
      "patterns": [
        {
          "name": "support.function.with-args.twig",
          "match": "(\\|\\s*)(?![\\.0-9])([a-zA-Z0-9_-]+)(?=\\:\\s*)",
          "1": {
            "name": "keyword.separator.pipe.twig"
          },
          "2": {
            "name": "support.function.filter.twig"
          }
        },
        {
          "name": "support.function.without-args.twig",
          "match": "(\\|\\s*)(?![\\.0-9])([a-zA-Z0-9_-]+)\\s*",
          "captures": {
            "1": {
              "name": "keyword.separator.pipe.twig"
            },
            "2": {
              "name": "support.function.filter.twig"
            }
          }
        }
      ]
    },
    "tags": {
      "name": "punctuation.output.twig",
      "begin": "({%)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.twig"
        }
      },
      "patterns": [
        {
          "include": "#keywords"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#filters"
        }
      ],
      "end": "(%})",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.twig"
        }
      }
    },
    "output": {
      "name": "punctuation.output.twig",
      "begin": "({{)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.twig"
        }
      },
      "patterns": [
        {
          "include": "#keywords"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#filters"
        }
      ],
      "end": "(}})",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.twig"
        }
      }
    },
    "parameters": {
      "patterns": [
        {
          "name": "variable.parameter.twig",
          "match": "(?![\\|\\S]),?\\s*\\b([a-zA-Z0-9_-]+)\\b\\s*(?=:)"
        }
      ]
    },
    "numeric": {
      "patterns": [
        {
          "name": "constant.numeric.index.twig",
          "match": "(?<=\\[)\\s*\\d+\\s*(?=\\])"
        },
        {
          "name": "constant.numeric.integer.twig",
          "match": "(?![a-zA-Z_])([.+-])?\\d+\\.\\d+[\\d.]+?(?![\\.\\)])",
          "captures": {
            "1": {
              "name": "keyword.other.arithmetic.twig"
            }
          }
        },
        {
          "name": "constant.numeric.float.twig",
          "match": "\\s(?:[.+-])?\\d+[\\d.]+?(?![\\.\\w])"
        },
        {
          "name": "constant.numeric.natural.twig",
          "match": "\\s\\d+\\s"
        },
        {
          "name": "constant.numeric.natural.twig",
          "match": "(?<=\\s*\\()\\d+(?=\\.\\.)"
        },
        {
          "name": "constant.numeric.natural.twig",
          "match": "(?<=\\d+\\.\\.)\\d+(?=\\s*\\))"
        },
        {
          "name": "constant.numeric.natural.twig",
          "match": "(?<=(?:\\!=|\\=\\=|\\<|\\>|\\>\\=|\\<\\=)\\s*)\\d?[\\d.]+?\\d"
        },
        {
          "name": "constant.numeric.natural.twig",
          "match": "\\s+\\d?[\\d.]+?\\d\\s*(?=(?:\\!=|\\=\\=|\\<|\\>|\\>\\=|\\<\\=))"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.word",
          "match": "\\s*\\b(not in|in|or|and|b-or|b-xor|b-and)\\b\\s*"
        },
        {
          "name": "keyword.operator.bitwise",
          "match": "\\s*\\b(==|!=|<=>|<|>|>=|<=|matches|starts with|ends with|\\.{2}|\\+|\\-|\\~|\\*|\\\/|\\\/{1,2}|\\%|\\*{2}|\\?{2}|\\?:)\\b\\s*"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.twig",
          "match": "\\b(false|true|null|empty)\\b"
        },
        {
          "name": "constant.character.entity.twig",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          }
        }
      ]
    }
  },
  "scopeName": "text.html.twig"
}